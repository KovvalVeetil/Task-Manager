{"version":3,"file":"testTaskCreation.js","sourceRoot":"","sources":["../../src/testTaskCreation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAiC;AACjC,yCAAsC;AACtC,yDAAgC;AAChC,wCAAwC;AAExC,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,SAAS,GAAG,IAAI,qBAAS,CAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,cAAc,EACrC,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,mBAAmB,EAC1C,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,cAAc,EACzC;IACE,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,WAAW;IACxC,OAAO,EAAE,UAAU;IACnB,OAAO,EAAE,OAAO,CAAC,GAAG;CACrB,CACF,CAAC;AAEF,KAAK,UAAU,gBAAgB;IAC7B,IAAI,CAAC;QACH,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,gCAAgC;QACvE,MAAM,OAAO,GAAG,MAAM,cAAI,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,WAAW;YAClB,WAAW,EAAE,qBAAqB;SACnC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;IACjD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;YAAS,CAAC;QACT,MAAM,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,uBAAuB;IAClD,CAAC;AACH,CAAC;AAED,gBAAgB,EAAE,CAAC","sourcesContent":["import * as dotenv from 'dotenv';\r\nimport { Sequelize } from 'sequelize';\r\nimport Task from \"./models/Task\"\r\n// import { Task } from \"./models/Task\";\r\n\r\ndotenv.config();\r\n\r\nconst sequelize = new Sequelize(\r\n  process.env.DB_NAME || 'task_manager',\r\n  process.env.DB_USER || 'task_manager_user',\r\n  process.env.DB_PASSWORD || 'new_password',\r\n  {\r\n    host: process.env.DB_HOST || 'localhost',\r\n    dialect: 'postgres',\r\n    logging: console.log,\r\n  }\r\n);\r\n\r\nasync function testTaskCreation() {\r\n  try {\r\n    await sequelize.sync({ force: true }); // Ensure the table is recreated\r\n    const newTask = await Task.create({\r\n      title: 'Test Task',\r\n      description: 'This is a test task',\r\n    });\r\n    console.log('Task created:', newTask.toJSON());\r\n  } catch (error) {\r\n    console.error('Error creating task:', error);\r\n  } finally {\r\n    await sequelize.close(); // Close the connection\r\n  }\r\n}\r\n\r\ntestTaskCreation();\r\n"]}